#******************************************************************** 
# Wrapper parameters 
#********************************************************************

# NOTICE!
# You need to replace the variables:
# {DOTCMS_INSTALLATION_FOLDER} with the path to the dotCMS installation folder
# {JAVA_HOME} with the path to the java installation folder
# Also edit the parameters -Xmx and -Xms to match your server memory settings
  
set.LANG=en_US

#All relative paths are going to be based on this
wrapper.working.dir={DOTCMS_INSTALLATION_FOLDER}\tomcat

# Java Application 
wrapper.java.command={JAVA_HOME}\bin\java.exe

# Java Main class 
wrapper.java.mainclass=org.tanukisoftware.wrapper.WrapperSimpleApp

# Java Classpath (include wrapper.jar) Add class path elements as 
# needed starting from 1
wrapper.java.classpath.1={DOTCMS_INSTALLATION_FOLDER}\bin\windows_service\lib\wrapper.jar 
wrapper.java.classpath.2={JAVA_HOME}\lib\tools.jar
wrapper.java.classpath.3={DOTCMS_INSTALLATION_FOLDER}\tomcat\bin\bootstrap.jar


# Java Library Path (location of Wrapper.DLL or libwrapper.so) 
wrapper.java.library.path={DOTCMS_INSTALLATION_FOLDER}\bin\windows_service\lib

# Initial Java Heap Size (in MB) 
wrapper.java.initmemory=1024

# Maximum Java Heap Size (in MB) 
wrapper.java.maxmemory=1024

# Application parameters. Add parameters as needed starting from 1 
wrapper.app.parameter.1=org.apache.catalina.startup.Bootstrap

#Additional Java Parameters
wrapper.java.additional.1=-Ddotserver=dotcms.org
wrapper.java.additional.2=-server
wrapper.java.additional.3=-Djava.awt.headless=true
wrapper.java.additional.4=-Xms1024M
wrapper.java.additional.5=-Xmx1024M
wrapper.java.additional.6=-XX:PermSize=128m
wrapper.java.additional.7=-Xverify:none
wrapper.java.additional.8=-Dfile.encoding=UTF8
wrapper.java.additional.9=-Djava.endorsed.dirs="{DOTCMS_INSTALLATION_FOLDER}\tomcat\endorsed"
wrapper.java.additional.10=-Dcatalina.base="{DOTCMS_INSTALLATION_FOLDER}\tomcat"
wrapper.java.additional.11=-Dcatalina.home="{DOTCMS_INSTALLATION_FOLDER}\tomcat"
wrapper.java.additional.12=-Djava.io.tmpdir="{DOTCMS_INSTALLATION_FOLDER}\tomcat\temp"

#Uncomment the following lines to enable the JMX interface
#Please be aware that this configuration doesn't provide any authentication, so it could pose a security risk.
#More info at http://java.sun.com/j2se/1.5.0/docs/guide/management/agent.html
#wrapper.java.additional.13=-Dcom.sun.management.jmxremote.port=7788
#wrapper.java.additional.14=-Dcom.sun.management.jmxremote.ssl=false
#wrapper.java.additional.15=-Dcom.sun.management.jmxremote.authenticate=false


# Port which the native wrapper code will attempt to connect to 
wrapper.port=1777

#******************************************************************** 
# Wrapper Logging parameters 
#******************************************************************** 
# Format of output for the console. (See docs for formats) 
wrapper.console.format=PM

# Log Level for console output. (See docs for log levels) 
wrapper.console.loglevel=INFO

# Log file to use for wrapper output logging.
# The specified log file name may contain one or both of the tokens: ROLLNUM and YYYYMMDD.
wrapper.logfile=logs\wrapper_YYYYMMDD.log

# Format of output for the log file. (See docs for formats) 
wrapper.logfile.format=TM

# Log Level for log file output. (See docs for log levels) 
wrapper.logfile.loglevel=INFO

# Maximum size that the log file will be allowed to grow to before 
# the log is rolled. Size is specified in bytes. The default value 
# of 0, disables log rolling. May abbreviate with the 'k' (kb) or 
# 'm' (mb) suffix. For example: 10m = 10 megabytes. 
# This property is ignored unless the wrapper.logfile.rollmode property has a value of SIZE, SIZE_OR_WRAPPER, or SIZE_OR_JVM.
wrapper.logfile.maxsize=100m

# Maximum number of rolled log files which will be allowed before old 
# files are deleted. The default value of 0 implies no limit. 
wrapper.logfile.maxfiles=3

# Controls the roll mode of the log file. Possible values include: 
# NONE - The log file will never be rolled by the Wrapper. The log file will continue to grow in size indefinately.
#        In general, it is best to avoid this option as it could provide a way for the Wrapper to eat up all available disc space should an application produce very large quantities of output. 
#        There are cases, however, where a user would want to disable log rolling by the Wrapper. An example is where an external log rolling tool is being used. 
# SIZE (Default) - The log file will be rolled whenever its size exceeds the value defined by the wrapper.logfile.maxsize property. 
# WRAPPER - The log file will be rolled when the Wrapper is first launched. This rolling will happen immediately after the configuration file has been loaded.
#           For this reason, any configuration problems will be logged to the file prior to it being rolled.
#           The log files will not have a maximum size and will continue to grow until the Wrapper is restarted. 
# JVM - The log file will be rolled on Wrapper startup as with the WRAPPER mode. But it will also be rolled just before any restarted JVMs are launced.
#       The log files will not have a maximum size and will continue to grow until the Wrapper or a JVM is restarted. 
# SIZE_OR_WRAPPER - This mode combines the SIZE and WRAPPER modes. The logfile will be rolled on Wrapper startup or whenever the logfile exceeds the configured maximum size. 
# SIZE_OR_JVM - This mode combines the SIZE and JVM modes. The logfile will be rolled on Wrapper startup, JVM restart, or whenever the logfile exceeds the configured maximum size. 
# DATE - As each log entry is logged to a file, its timestamp is compared with a YYYYMMDD formatted token in the current log file. Whenever this date changes a new log file will be opened.
#        This has the benefit of grouping all log entries for a given day in a specific file. A file will not be created on days which do not have any log output. 
#        This roll mode requires that the wrapper.logfile property contain the token "YYYYMMDD" someplace in the file name. 
wrapper.logfile.rollmode=DATE

# Log Level for sys/event log output. (See docs for log levels) 
wrapper.syslog.loglevel=NONE

#******************************************************************** 
# Wrapper Unix daemon parameters 
#******************************************************************** 
# File to write process ID to 


#******************************************************************** 
# Wrapper NT Service parameters 
#******************************************************************** 
# WARNING - Do not modify any of these parameters when an application 
# using this configuration file has been installed as a service. 
# Please uninstall the service before modifying this section. The 
# service can then be reinstalled.

# Name of the service 
wrapper.ntservice.name=dotCMS Service

# Display name of the service 
wrapper.ntservice.displayname=dotCMS Application Server

# Description of the service 
wrapper.ntservice.description=dotCMS Application Server

# Service dependencies. Add dependencies as needed starting from 1 
wrapper.ntservice.dependency.1=

# Mode in which the service is installed. AUTO_START or DEMAND_START 
wrapper.ntservice.starttype=AUTO_START

# Priority at which the service is run. NORMAL, LOW, HIGH, or 
# REALTIME 
wrapper.ntservice.process_priority=NORMAL 
